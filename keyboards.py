from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from request_db import *
from main import get_conn

# –ü–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç –¥–ª—è –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º—ã –¥–æ–ª–∂–Ω—ã —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å id –∞–¥–º–∏–Ω–∞
admin_tg_id = "6259845330"


default_keyboard = ReplyKeyboardBuilder()
default_keyboard.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))


sing_up = InlineKeyboardBuilder()
sing_up.add(types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="sign_up"))


def create_start_keyboard():
    start_keyboard = InlineKeyboardBuilder()
    start_keyboard.add(types.InlineKeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏", callback_data="sign_up_service"),
                               types.InlineKeyboardButton(text="üíÖ –ü–æ–¥–æ–±—Ä–∞—Ç—å –¥–∏–∑–∞–π–Ω", callback_data="choice_design"))

    start_keyboard.row(types.InlineKeyboardButton(text="üåà –ü–∞–ª–∏—Ç—Ä–∞ —Ü–≤–µ—Ç–æ–≤", callback_data="palette_colors"),
                               types.InlineKeyboardButton(text="üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö", callback_data="info_service"))

    start_keyboard.row(types.InlineKeyboardButton(text="‚ÑπÔ∏è –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info"))

    start_keyboard.row(types.InlineKeyboardButton(text="–ò–Ω—Å—Ç–∞–≥—Ä–∞–º",
                                                          url=f"{get_social_link(get_conn(),
                                                                             "–∏–Ω—Å—Ç–∞–≥—Ä–∞–º", admin_tg_id)}"),
                               types.InlineKeyboardButton(text="–í–∫–æ–Ω—Ç–∞–∫—Ç–µ",
                                                          url=f"{get_social_link(get_conn(),
                                                                             "–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ", admin_tg_id)}"))
    return start_keyboard


choice_design = InlineKeyboardBuilder()


def generate_keyboard(list_answer):
    answer_keyboard = InlineKeyboardBuilder()
    answer_keyboard.row(types.InlineKeyboardButton(text=list_answer[0], callback_data="first_answer"),
                       types.InlineKeyboardButton(text=list_answer[1], callback_data="second_answer"))

    answer_keyboard.row(types.InlineKeyboardButton(text=list_answer[2], callback_data="third_answer"),
                       types.InlineKeyboardButton(text=list_answer[3], callback_data="fourth_answer"))
    return answer_keyboard


def generate_signup_keyboard(list_time):
    time_keyboard = InlineKeyboardBuilder()
    for time in list_time:
        time_keyboard.add(types.InlineKeyboardButton(text=f"{time}", callback_data="sign_up|"+str(time)))
    time_keyboard.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_time"))
    return time_keyboard


def create_service_keyboard(conn, user_id):
    service_keyboard = InlineKeyboardBuilder()
    for service in get_master_service(conn, user_id):
        service_keyboard.add((types.InlineKeyboardButton(text=f"{service[0]}", callback_data="choice_service|"+service[0])))

    service_keyboard.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_day"))
    return service_keyboard


'''
–ê–¥–º–∏–Ω—Å–∫–∞—è —á–∞—Å—Ç—å
'''
admin_keyboard = ReplyKeyboardBuilder()
admin_keyboard.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
admin_keyboard.row(types.KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"))
admin_keyboard.row(types.KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª—É–≥–∞—Ö"))
admin_keyboard.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª—É–≥–∏"))
admin_keyboard.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞–ª–∏—Ç—Ä—É —Ü–≤–µ—Ç–æ–≤"))
admin_keyboard.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"))
admin_keyboard.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"))
admin_keyboard.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∏–∑–∞–π–Ω–∞"))

keyboard_swap_main = ReplyKeyboardBuilder()
keyboard_swap_main.row(types.KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç"), types.KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É"))
keyboard_swap_main.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))


social_links_keyboard = ReplyKeyboardBuilder()
social_links_keyboard.row(types.KeyboardButton(text="–ò–Ω—Å—Ç–∞–≥—Ä–∞–º"), types.KeyboardButton(text="–í–∫–æ–Ω—Ç–∞–∫—Ç–µ"))
social_links_keyboard.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))


def create_drop_service_keyboard(service):
    drop_service_keyboard = InlineKeyboardBuilder()
    drop_service_keyboard.add(types.InlineKeyboardButton(text=f"–£–¥–∞–ª–∏—Ç—å", callback_data="drop_service|" + service))
    return drop_service_keyboard


def create_drop_palette_keyboard(index):
    drop_palette_keyboard = InlineKeyboardBuilder()
    drop_palette_keyboard.add(types.InlineKeyboardButton(text=f"–£–¥–∞–ª–∏—Ç—å", callback_data="drop_image|" + index))
    return drop_palette_keyboard


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞
access_change_test_keyboard = ReplyKeyboardBuilder()
access_change_test_keyboard.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ç–µ—Å—Ç"),
                       types.KeyboardButton(text="–ü–æ–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–∏–∑–∞–π–Ω–∞"))
access_change_test_keyboard.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))

answer_create_new_question_keyboard = ReplyKeyboardBuilder()

answer_create_new_question_keyboard.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å"))
answer_create_new_question_keyboard.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"))


def create_change_design_keyboard(name_image):
    if name_image == "first.jpg":
        number_image = "–ø–µ—Ä–≤—É—é"
    elif name_image == "second.jpg":
        number_image = "–≤—Ç–æ—Ä—É—é"
    elif name_image == "third.jpg":
        number_image = "—Ç—Ä–µ—Ç—å—é"
    elif name_image == "fourth.jpg":
        number_image = "—á–µ—Ç–≤–µ—Ä—Ç—É—é"
    else:
        number_image = "–û—à–∏–±–∫–∞"
    change_design_keyboard = InlineKeyboardBuilder()
    change_design_keyboard.add(types.InlineKeyboardButton(text=f"–ü–æ–º–µ–Ω—è—Ç—å {number_image} –∫–∞—Ä—Ç–∏–Ω–∫—É",
                                                          callback_data="change_image|" + name_image))
    return change_design_keyboard
